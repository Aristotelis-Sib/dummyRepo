# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
#   push:
#     branches:
#       - main
  
  workflow_dispatch:
  # Define the inputs of this Workflow
    inputs:
      input1:
        description: Input 1 description
        type: boolean
      input2:
        description: Input 2 description
        type: boolean
      input3:
        description: Input 3 description
        type: boolean
      requiredInputs:
        description: At least one of input1 or input2 is required
        anyOf:
          - required: input1
          - required: input2
          - required: input3
env:
  PR_NUMBER: ${{ github.event.pull_request.number }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    if: "!contains(join(github.event.inputs.*,' '),'true')"
    # The type of runner that the job will run on
    runs-on: windows-latest
    outputs:
      output_1: ${{ steps.output_res_pwsh.outputs.output_1 }}
    steps:
        - name: Checkout the running branch
          uses: actions/checkout@v2

#         - name: Set up MATLAB
#           uses: matlab-actions/setup-matlab@v1
        
        - name: Copy output with Powershell core
          id: output_res_pwsh
          run: |
            echo "output_1=ABC" >> $env:GITHUB_OUTPUT
            echo $env:GITHUB_OUTPUT
            echo ${{github.ref}}
          shell: pwsh
              
        - name: Inputs test
          run: |
            echo  ${{github.event_name}}
            echo  ${{github.event.inputs.*}}
            echo  ${{join(github.event.inputs.*,',') }}        
            
        - name: Should not run step
          if: "!startsWith(github.ref, 'refs/heads/main')"
          run: |
            echo "Step runed"
      
#         - name: Copy output with Powershell core
#           run: |
#             echo $var = $(matlab -softwareopengl -batch "getTestsToPerform()")
#             echo $var
#           shell: pwsh
  job1:
    # The type of runner that the job will run on
    runs-on: windows-latest
    needs: deploy
    if: ( success() && needs.deploy.outputs.output_1== 'ddd' ) || ( needs.deploy.result == 'skipped' && contains(join(github.event.inputs.*,' '),'true'))
    steps:
        - name: Check if statement True
          if: needs.deploy.outputs.output_1== 'ABC'
          run: |
            echo "If statemnet works"
            sleep 2m
            shell: bash

        - name: Check if statement False
          if: needs.deploy.outputs.output_1== 'ABCD'
          run: |
            echo "If statemnet does not work"
  
        - name: Check contains statement True AB
          if: contains(needs.deploy.outputs.output_1,'AB')
          run: echo "Contains works"

