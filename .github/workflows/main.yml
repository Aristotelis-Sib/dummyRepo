# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PR_NUMBER: ${{ github.event.pull_request.number }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Old-Runner]
    outputs:
      output_1: ${{ steps.output_res_pwsh.outputs.output_1 }}
    steps:
        - name: Checkout the running branch
          uses: actions/checkout@v2
   
        - name: Copy output with Powershell core
          id: output_res_pwsh
          run: |
            echo "output_1=ABC" >> $env:GITHUB_OUTPUT
            echo $env:GITHUB_OUTPUT
          shell: pwsh
  job1:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Old-Runner]
    needs: deploy
    steps:
        - name: Echo Result with PWSH core
          run: |
            echo ${{needs.deploy.outputs.output_1}}
          shell: pwsh
          
        - name: Check if statement True
          if: needs.deploy.outputs.output_1== 'ABC'
          run: |
            echo "If statemnet works"
            
        - name: Check if statement False
          if: needs.deploy.outputs.output_1== 'ABCD'
          run: |
            echo "If statemnet does not work"
  
        - name: Check contains statement True AB
          if: contains(needs.deploy.outputs.output_1,'AB')
          run: echo "Contains works"

        - name: Check contains statement True A
          if: contains(needs.deploy.outputs.output_1,'A')
          run: echo "Contains works"
          
        - name: Check contains statement True B
          if: contains(needs.deploy.outputs.output_1,'B')
          run: echo "Contains works"

        - name: Check contains statement True C
          if: contains(needs.deploy.outputs.output_1,'C')
          run: echo "Contains works"

        - name: Check contains statement False
          if: contains(needs.deploy.outputs.output_1,'D')
          run: echo "Contains works"
